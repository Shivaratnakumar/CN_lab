#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<fcntl.h>
#include<string.h>
#define SERV_TCP_PORT 6880
#define SERV_HOST_ADDR "127.0.0.1"

int main()
{
	int sockfd,newsockfd,clilen;
	struct sockaddr_in cli_addr,serv_addr;
	char filename[25], buf[2000];
     	int n,m=0;
      int fd;

	if((sockfd=socket(AF_INET, SOCK_STREAM,0))<0)
		
		printf("SERVER : CANNT OPEN STREAM SOCKET");
	else
		printf("SERVER : CAN OPEN STREAM SOCKET SUCCESSFULLY");
	
	serv_addr.sin_family=AF_INET;

	serv_addr.sin_addr.s_addr=htonl(INADDR_ANY);

	serv_addr.sin_port=htons(SERV_TCP_PORT);

	if(bind(sockfd,(struct sockaddr *) &serv_addr,sizeof(serv_addr))<0)
	
		printf("SERVER : CANNOT BIND LOCAL ADDRESS");
	else                                                                                                      
		printf("SERVER: BINDING SUCCESSFULLY\t");
      
	listen(sockfd,5);
	
	printf("\n SERVER:Waiting for client..........\n");
      
	for(;;)
      {
        	clilen=sizeof(cli_addr);

      	newsockfd=accept(sockfd,(struct sockaddr*) &cli_addr, &clilen);
     
		if(newsockfd<0)
       		printf("SERVER: Accept error\n");
      	else
     			printf("SERVER:Accepted\n");
           
		n=read(newsockfd,filename,25);

           	filename[n]='\0';
    		
		if((fd=open(filename,O_RDONLY))!=-1)
     		{
     	      	printf("\nSERVER:%s is found and ready to transfer..n",filename);
       
			n=read (fd,buf,2000);

        		buf[n]='\0';

        		write(newsockfd,buf,n);

     			printf("\nTransfer sucess");
  		}
   		else
		{
     			printf("SERVER: %s not found \n",filename);
      		
			write(newsockfd,NULL,0);
 		}
   		close (newsockfd);

   		return 0;
    	}
}
